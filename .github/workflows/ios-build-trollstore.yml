name: Build iOS 15 IPA (TrollStore)

on: { workflow_dispatch: {} }

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Remove old .xcodeproj if exists
        run: rm -rf BillPro.xcodeproj

      - name: Install tools (Mint + ldid)
        run: |
          brew update
          brew install mint ldid

      - name: Generate Xcode project with XcodeGen 2.43.0 (via Mint)
        run: |
          mint run yonaskolb/XcodeGen@2.43.0 xcodegen generate

      - name: Force downgrade project format to Xcode 15 (fallback)
        run: |
          PBX=BillPro.xcodeproj/project.pbxproj
          /usr/bin/perl -pi -e 's/objectVersion = 7[6-9];/objectVersion = 75;/g' "$PBX"
          /usr/bin/perl -pi -e 's/compatibilityVersion = "Xcode 1[6-9](\.0)?";/compatibilityVersion = "Xcode 15.0";/g' "$PBX"

      - name: Build .app (no signing, save & print logs)
        run: |
          set -x
          rm -rf build
          xcodebuild -project BillPro.xcodeproj -scheme BillPro -configuration Release -sdk iphoneos \
            IPHONEOS_DEPLOYMENT_TARGET=15.0 CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
            -derivedDataPath build \
            build 2>&1 | tee build.log
        shell: bash

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

      - name: Verify .app exists and has executable
        id: verify
        run: |
          APP_PATH="build/Build/Products/Release-iphoneos/BillPro.app"
          echo "APP_PATH=$APP_PATH"
          test -d "$APP_PATH" || { echo "::error::App not found at $APP_PATH"; exit 1; }
          ls -la "$APP_PATH"
          EXE="$APP_PATH/BillPro"
          test -f "$EXE" || { echo "::error::Executable not found at $EXE"; exit 1; }
          file "$EXE" || true
          echo "APP_PATH=$APP_PATH" >> $GITHUB_OUTPUT

      - name: Ad-hoc sign with ldid (TrollStore)
        run: |
          mkdir -p signed
          cp -R "${{ steps.verify.outputs.APP_PATH }}" signed/BillPro.app
          cat > signed/entitlements.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>application-identifier</key><string>com.example.BillPro</string>
            <key>get-task-allow</key><true/>
            <key>keychain-access-groups</key><array><string>com.example.BillPro</string></array>
          </dict>
          </plist>
          PLIST
          ldid -Ssigned/entitlements.plist signed/BillPro.app

      - name: Package IPA
        run: |
          mkdir -p Payload
          cp -R signed/BillPro.app Payload/
          zip -r BillPro_iOS15_TrollStore.ipa Payload

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: BillPro-iOS15-IPA
          path: BillPro_iOS15_TrollStore.ipa
